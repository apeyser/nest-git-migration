language: cpp
compiler:
  - gcc
  - clang
#env: 
 #- xGSL=GSL+
 #- xGSL=GSL-  
 #- xMPI=MPI+
 # - xMPI=MPI-
 # - xPython=PYTHON+
 # - xPython=PYTHON-
#env:
#  - ANALYZE=false
#  - ANALYZE=true
cache:
apt: true  
virtualenv:
  system_site_packages: true
before_install:
  - echo $LANG
  - echo $LC_ALL
  
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get update && sudo apt-get install -y llvm-3.4 llvm-3.4-dev; fi
  #- if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install python3 ipython3 python3-matplotlib python3-matplotlib-tk; fi
  #- sudo apt-get install -y python3 ipython3 python3-matplotlib python3-matplotlib-tk
  
# install the Boost libraries
  - sudo apt-get update -qq
  - sudo apt-get install libboost-thread-dev libboost-system-dev libboost-test-dev

  - sudo apt-get install -y python3 ipython3 coreutils gawk mawk original-awk
  # some basic package build tools:
  - sudo apt-get install -y devscripts build-essential
  # remove any obsolete libraries
  - sudo apt-get autoremove
 
  # For NEST ConnPlotter tutorial
  - sudo apt-get install -y texlive-latex-extra
  #- sudo apt-get install -y texlive-multirow texlive-pdfcrop
  #Clang
  #- sudo apt-get install clang-analyzer indent
  - sudo apt-get install -y clang indent
  # Required by Topographica
  #- sudo apt-get install xorg-x11-server-Xvfb pylint pyflakes
  # Required by NEST, PyNN and Topographica
  #- sudo apt-get install python-devel numpy scipy python-virtualenv python-matplotlib python-matplotlib-tk
  - sudo apt-get install -y python-debian python-numpy python-scipy python-virtualenv python-matplotlib python-tk
  # Required by Sumatra and PyNN
  #- sudo apt-get install python-coverage python-nose python-setuptools
  #- sudo apt-get install mpi4py-openmpi
  - sudo apt-get install -y python-coverage python-nose python-setuptools
  - sudo apt-get install -y python-mpi4py openmpi-dev openmpi-bin openmpi-doc libopenmpi-dev
  #python 3
  #- sudo apt-get install python3 python3-devel python3-numpy python3-scipy python3-nose python3-coverage python3-Cython
  - sudo apt-get install -y python3 python3-all-dev python3-dev python3-numpy python3-scipy python3-nose cython
  # Needed for documentation, e.g. NEST examples
  #- sudo apt-get install texlive texlive-latex ghostscript
  - sudo apt-get install -y texlive texlive-latex-base texlive-latex3 ghostscript
  #Build dependencies for NEST
  #- sudo apt-get install autoconf automake libtool libtool-ltdl-devel
  #- sudo apt-get install gsl-devel openmpi-devel readline-devel Cython
  - sudo apt-get install -y autoconf automake libtool libltdl-dev
  - sudo apt-get install -y libgsl0-dev  libghc-readline-dev gsl-bin libgsl0-dbg libgsl0ldbl
  #Build dependencies for Sumatra
  #- if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get install Django django-tagging python-django python-django-tagging python-httplib2 python-simplejson GitPython pysvn; fi
  - sudo apt-get install -y python-django python-django-tagging python-httplib2 python-simplejson python-svn git-svn
  #Build dependencies for PyNN
  - sudo apt-get install -y python-cheetah python-jinja2 python-mock
  #Build dependencies for Topographica
  #- sudo apt-get install tkinter gmpy python-imaging python-imaging-tk
  - sudo apt-get install -y python-tk python-gmpy python-imaging python-imaging-tk
  
  #- sudo apt-get install -y python 
  #- sudo apt-get install cvs e2fsprogs-devel gettext-devel glib2-devel gpm-devel groff libssh2-devel slang-devel ncurses-devel check check-devel
  #ubuntu
  #- sudo apt-get install cvs e2fsprogs gettext libpackagekit-glib2-dev gpm groff libssh2-1-dev python-libssh2 slang-gsl libncurses5-dev check
  - sudo apt-get install -y cvs e2fsprogs gettext libpackagekit-glib2-dev groff libssh2-1-dev python-libssh2 slang-gsl libncurses5-dev check
  #- sudo apt-get install build-essential autoconf automake libtool libltdl7-dev 
  #- sudo apt-get install libreadline6-dev libncurses5-dev libgsl0-dev python-all-dev python-numpy python-scipy python-matplotlib ipython 
  - python --version
 
#install:
 #  - pip install numpy
#   - pip install matplotlib
#   - pip install scipy
   #- if [[ $TRAVIS_PYTHON_VERSION == "2.7" ]]; then sudo apt-get install python-matplotlib; fi
   #- if [[ $TRAVIS_PYTHON_VERSION == "3.2" ]]; then sudo apt-get install python3-dev python3-numpy; fi
#before_script:
#  - travis_retry bundle
 # - if [ $TRAVIS_OS_NAME == linux ]; then travis_retry ./configure --llvm-config llvm-config-3.4; fi
 
 # for checking coding style
  - sudo apt-get install clang-format-3.4
  - sudo ln -s /usr/bin/clang-format-3.4 /usr/bin/clang-format
  - clang-format -style=llvm -dump-config > .clang-format
#cpplint
  - sudo curl -L "http://google-styleguide.googlecode.com/svn/trunk/cpplint/cpplint.py" -o /usr/bin/cpplint.py
  - sudo chmod a+x /usr/bin/cpplint.py
#cppcheck
  - sudo apt-get install cppcheck
  
install: 
 - cppcheck --version
before_script:
 - chmod +x build.sh 
 - chmod +x test_result.sh
script: ./build.sh  
       # ./test_result.sh
#after_script:
# - TRAVIS_TEST_RESULT
notifications:
  email: false
    - r.deepu@fz-juelich.de
    - t.zito@fz-juelich.de
    - a.peyser@fz-juelich.de
    - a.morrison@fz-juelich.de
    - j.eppler@fz-juelich.de
    - t.ippen@fz-juelich.de
  on_success: change
  on_failure: always
  #on_start: false
